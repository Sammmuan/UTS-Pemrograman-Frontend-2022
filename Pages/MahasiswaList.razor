@page "/mahasiswa"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http

<PageTitle>Mahasiswa</PageTitle>

<h1>Mahasiswa SI UKDW</h1>

<p>Data Mahasiswa Universitas Kristen Duta Wacana.</p>

<a href="/add">
<button class="btn btn-primary">Tambah Mahasiswa</button></a>
<div class="input-group col">
        <input type="text" class="form-control" @onclick="CariData" placeholder="Cari/Hapus Mahasiswa Berdasarakan NIM" @bind="SearchString" />
        <a class="btn btn-primary" role="button" @onclick="CariData">Cari</a>
        <a class="btn btn-danger" role="button" @onclick="DeleteData">Delete Data</a>
    </div>
@if (mhs == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="Mahasiswa">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nama</th>
                <th>NIM</th>
                <th>Alamat</th>
                <th>EMAIL</th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (var mh in mhs)
            {
                <tr>
                    <td>@mh.id</td>
                    <td>@mh.nama</td>
                    <td>@mh.nim</td>
                    <td>@mh.alamat</td>
                    <td>@mh.email</td>
                    <td>
                        <a href="/add" ><button class="btn btn-primary">Update</button></a>
                        
                        </td>
                    <td>
                       <a ><button class="btn btn-danger">Delete</button></a>
                        </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

     protected List<Mahasiswa> searchUserData = new();
    protected override async Task OnInitializedAsync(){
        mhs = await Http.GetFromJsonAsync<List<Mahasiswa>>("https://kpsi.fti.ukdw.ac.id/api/progmob/mhs/72200403");
        searchUserData = mhs;
    }

    protected List<Mahasiswa> mhs = new();
    protected string SearchString { get; set; } = string.Empty;
    protected void CariData(){
        if (!string.IsNullOrEmpty(SearchString)){
            mhs = searchUserData
                .Where(x => x.nim.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1)
                .ToList();
        }else{
            mhs = searchUserData;
        }
    }
    protected void DeleteData(){
    if (!string.IsNullOrEmpty(SearchString)){
            mhs = searchUserData
                .Where(x => x.nim.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1)
                .ToList();
        }else{
            mhs = searchUserData;
        }
    }
   



    public class Mahasiswa
    {
        public int id { get; set; }

        public string nama { get; set; }

        public string nim { get; set; }

        public string alamat {get;set;}

        public string email {get;set;}

    }
}